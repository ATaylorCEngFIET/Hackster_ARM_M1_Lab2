set be8 [get_property "MODELPARAM_VALUE.BE8" [::ipxit::current_scope]]
if {$be8 == 1} {
  set endian "big"
} else {
  set endian "little"
}

set cpu [::ipx::add_cpu CORTEX_M1 [current_ipbom]]
set_property endian         $endian $cpu
set_property instance_path  ""      $cpu
set_property bootloop_file  ""      $cpu
set_property processor_type ARM     $cpu
set_property is_visible     true    $cpu

set instance [current_instname]
set ipfile [add_ipfile -usedIn {synthesis implementation} ${instance}.xdc]

puts_ipfile $ipfile {# DAP synchronisers.  Block is DAPDpEnSync and DAPDpSync}
puts_ipfile $ipfile {set_property ASYNC_REG TRUE [get_cells -hierarchical -regexp .*u_swj_dp.*sync_reg_reg]}
puts_ipfile $ipfile {set_property ASYNC_REG TRUE [get_cells -hierarchical -regexp .*u_swj_dp.*sync2_reg_reg]}
puts_ipfile $ipfile {# Note : Also some cells in nvic with the name sync_reg, and also sync2_reg[x]}
puts_ipfile $ipfile {set_property ASYNC_REG TRUE [get_cells -hierarchical -regexp .*u_cortexm1.*sync_reg_reg]}
puts_ipfile $ipfile {set_property ASYNC_REG TRUE [get_cells -hierarchical -regexp .*u_cortexm1.*sync2_reg_reg]}

puts_ipfile $ipfile {# The master - slave state machines need to be sequential}
puts_ipfile $ipfile {set_property FSM_ENCODING sequential [get_cells -hierarchical -regexp .*DAPAhbApSlv.*CurState_reg.*]}
puts_ipfile $ipfile {set_property FSM_ENCODING sequential [get_cells -hierarchical -regexp .*DAPAhbApMst.*CurState_reg.*]}

puts_ipfile $ipfile {# These are the other state machines within the DAP interface}
puts_ipfile $ipfile {# They still work when encoded as either one_hot or as auto.}
puts_ipfile $ipfile {# In working build, this got encoded as one_hot}
puts_ipfile $ipfile {# set_property FSM_ENCODING auto [get_cells -hierarchical -regexp .*DAPSwDpProtocol.*State_reg.*]}
puts_ipfile $ipfile {# In working build, this got encoded as sequential}
puts_ipfile $ipfile {# set_property FSM_ENCODING auto [get_cells -hierarchical -regexp .*DAPJtagDpProtocol.*JTAGcurr_reg.*]}
puts_ipfile $ipfile {# In working build, this got encoded as sequential}
puts_ipfile $ipfile {# Naming convention broken, the module is DAPSwDpApbIf, but the instance is just DAPDpApbIf}
puts_ipfile $ipfile {# set_property FSM_ENCODING auto [get_cells -hierarchical -regexp .*DAPDpApbIf.*APBcurr_reg.*]}

close_ipfile $ipfile
